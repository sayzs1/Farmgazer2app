# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - farmgazer2app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # 清理和重新安装
      - name: Clean install and build
        run: |
          rm -rf node_modules
          rm -rf .next
          npm ci
          npm run build
        env:
          AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
          AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
          AZURE_SQL_USER: ${{ secrets.AZURE_SQL_USER }}
          AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          NODE_ENV: production

      # 在构建后立即验证 .next 目录
      - name: Verify build output
        run: |
          echo "Listing .next directory contents:"
          ls -la .next/
          if [ ! -f ".next/BUILD_ID" ]; then
            echo "BUILD_ID file not found!"
            exit 1
          fi

      # 确保 .next 目录被包含在 zip 中
      - name: Zip artifact for deployment
        run: |
          echo "Creating deployment package..."
          zip -r release.zip . -x "*.git*" "*.github*"
          echo "Verifying zip contents:"
          unzip -l release.zip | grep .next/

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_029B35931F9A430DAF29AAAD877FEE41 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_ADCCA55F290C4CCDA738BB525A0109E4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F93D0492C2B9485BA89305381EF23CF7 }}

      # 在部署前安装生产依赖
      - name: Install production dependencies
        run: |
          npm ci --only=production
          ls -la .next/

      # 设置应用设置
      - name: Set Web App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'farmgazer2app'
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production",
                "slotSetting": false
              },
              {
                "name": "PORT",
                "value": "3000",
                "slotSetting": false
              },
              {
                "name": "WEBSITES_PORT",
                "value": "3000",
                "slotSetting": false
              },
              {
                "name": "AZURE_SQL_SERVER",
                "value": "${{ secrets.AZURE_SQL_SERVER }}",
                "slotSetting": false
              },
              {
                "name": "AZURE_SQL_DATABASE",
                "value": "${{ secrets.AZURE_SQL_DATABASE }}",
                "slotSetting": false
              },
              {
                "name": "AZURE_SQL_USER",
                "value": "${{ secrets.AZURE_SQL_USER }}",
                "slotSetting": false
              },
              {
                "name": "AZURE_SQL_PASSWORD",
                "value": "${{ secrets.AZURE_SQL_PASSWORD }}",
                "slotSetting": false
              },
              {
                "name": "AZURE_STORAGE_CONNECTION_STRING",
                "value": "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}",
                "slotSetting": false
              },
              {
                "name": "AZURE_STORAGE_CONTAINER_NAME",
                "value": "${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}",
                "slotSetting": false
              }
            ]

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'farmgazer2app'
          slot-name: 'Production'
          package: .
          clean: true
          